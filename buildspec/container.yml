version: 0.2

env:
  variables:
    IMAGETAG: "1.2"
    IMAGE_REPO_NAME: "dso-repo"
    AWS_DEFAULT_REGION: "ap-east-1"
    AWS_ACCOUNT_ID: "93712776776"
    DEPLOYMENT: "dso-demo"

phases:
  pre_build:
    commands:
      #- aws s3 sync ./infrastructure/*.yaml s3://cf-templates-i6aohmzkcsjf-ap-east-1/templates/ --acl public-read
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      # scale nodes
      #- eksctl scale nodegroup --cluster=yhdEks --nodes=5, --name=ng-e56250ca

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build -t $IMAGE_REPO_NAME:$IMAGETAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGETAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGETAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGETAG
      - kubectl set image deployment/$DEPLOYMENT dso-repo=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - sleep 1m
      - ISHIGH=$(aws ecr describe-image-scan-findings --repository-name dso-repo --image-id imageTag=1.0 --region ap-east-1 | grep "\"severity\"'':' \"HIGH\"") 
      - if [ -z "$ISHIGH" ]; then echo "Not high"; else echo "$ISHIGH"; fi
      #- kubectl scale $DEPLOYMENT dso-demo --replicas=3

#artifacts:
#  files:
    #- infrastructure/* 
cache:
  paths:
    - '/root/.m2/**/*'
